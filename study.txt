1.
git ignore 검색:
특정 파일/ 디렉토리를 추척하지 않도록 하는 파일. 문법으로 무엇을 무시할지 작성. 환경설정이나 로그파일 등을 무시하도록 할 수 있다.
지금까지 찾은 문법들은 # * ** ! ? / 파일명 이 있다. 설명은 종이에 써두었음.

2.
branch를 master에서 main으로 바꾸기.
git branch -m master main 으로 이름만 간단하게 바꾸었다.
그런데 새로운 브랜치를 만들라는 소리일까? 일단 좀 있다가 develop 브랜치를 만들 예정이니 이대로 냅두겠다.

3.
github 에도 master -> main + default branch 가 뭔지 알아보기
이게 도대체 뭔 소리지?? 음 이런 말을 쓰는데도 vs code에다 쓰니까 일 하는 걸로 보이는 듯 하다. 일단 난 두 작업으로 나눌건데
    1> github 브랜치를 main으로 바꾼다. 단, 터미널에서 바꾸는 쪽으로 노력해보기.
    2> defalt branch가 뭔지 알아본다. 
어떻게 바꾸는지 좀 찾아보니 github의 브랜치를 바꾸고 defalt branch로 설정하라는 말인듯. 이쪽으로 경로변경. 
일단 로컬 브랜치는 main이니까 github브랜치 변경. 하려고 git branch -r로 origin/main, origin/master 있는 거 확인해서 바로
git push origin --delete master 을 했지만 푸시에 실패했다고 뜸. 원인이 master branch가 defalt branch로 설정되어 있기 때문이라고 판단.
터미널로 원격 저장소의 디폴트 브랜치를 바꾸는 걸 시도해보고 안된다면 깃허브에 가서 직접 변경해줄 예정. 토큰을 만들어야 한다고 나와서 깔끔하게 포기.
왜냐면 이전에 만들려다가 계속 에러나서 포기했기 때문. 앱에서 바꾼다. 근데 브랜치 세팅에서 Branch protection rules 이런것만 떠서 검색해보니 브랜치 보호 규칙 때문에 뭘 바꿀 수 없다고 한다.
따라서 이를 해제하고 만들거나 디폴트를 바꾸고 다시 규칙을 활성화하겠다. 취소하겠다. git push origin main을 하고 설정에서 바로 바꾸어줌.

4.
develop branch 만들기, 어디에다 만들라는 것일까... 일단 로컬에서 git checkout -b develop을 쳐서 만들고 이동시키는걸로 만들었다.
그러고 git push origin develop을 쳐서 원격 저장소에 올렸고 제대로 되었는지 깃허브에 확인하러 가겠음. 생겼다! 야호~
안돼.. 커밋을 잘못한 거 같다. log로 커밋 아이디를 확인하고 revert한다음 브랜치를 main으로 해서 커밋 후 push해야지.
revert에서 에러가 났다. 다른 브랜치에서 했기 때문으로 보인다. 무식하게 git revert --continue를 해보겠다. 병합하지 않은 폴더 해결하란다.

